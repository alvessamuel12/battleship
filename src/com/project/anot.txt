    | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |
---------------------------------------------
| A |   |   |   |   |   |   |   |   |   |   |
---------------------------------------------
| B |   | 1 |   |   | 1 |   |   |   |   |   |
---------------------------------------------
| C |   | 1 |   | 1 |   |   |   |   |   |   |
---------------------------------------------
| D |   |   |   | 1 |   |   | 1 |   |   |   |
---------------------------------------------
| E |   |   | 1 |   |   |   |   |   |   |   |
---------------------------------------------
| F |   |   |   |   |   |   |   |   |   |   |
---------------------------------------------
| G |   |   |   |   |   |   |   |   |   | 1 |
---------------------------------------------
| H |   |   |   |   |   |   |   |   |   |   |
---------------------------------------------
| I |   |   |   |   |   |   |   |   |   |   |
---------------------------------------------
| J |   |   |   |   |   |   | 1 |   |   |   |
---------------------------------------------

    | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |
---------------------------------------------
| A | * |   |   |   |   |   |   |   |   |   |
---------------------------------------------
| B |   |   |   |   |   |   |   |   |   |   |
---------------------------------------------



// quando tem

// 1: N => N
// 2: X => ' '
// a1 => C: tem && P: tem (X ou N ou n)
// se a1 de P deleta
// a1 de C vira X

// 1: ' ' => X
// 2: ' ' => *
// C: ñ && P: tem
// se a1 de P == X, * senão deleta
// a1 de C vira *

// quando não tem

// C: tem && P: ñ 
// a1 de P não muda
// a1 de C vira n

// 1: ' ' => '*'
// 2: ' ' => ''
// C: ñ && P: ñ
// a1 de P não muda
// a1 de C vira -